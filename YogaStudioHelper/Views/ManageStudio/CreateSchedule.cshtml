


@model YogaStudioHelper.ViewModels.ScheduleViewModel


@{

    // a model YogaStudioHelper.ViewModels.ScheduleViewModel
    //model Database.Schedule

    ViewBag.Title = "CreateSchedule";
}

<h2>CreateSchedule</h2>

<link href="~/Content/bootstrap.min.css" rel="stylesheet" type="text/css" />

<link href="~/Content/jquery.datetimepicker.css" rel="stylesheet" />

<script src="~/Scripts/jquery-3.3.1.min.js"></script>

<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<script src="~/Scripts/jquery.datetimepicker.full.min.js"></script>


<div class="centerDiv">
    @using (Html.BeginForm())
    {
        <table class="inputTable">
            <tr>
                <td></td>
                <td style="text-align:center;"><h2>Schedule</h2></td>
            </tr>

            <tr>
                <th>Teacher:</th>

                <td>
                    @Html.DropDownListFor(m => m.Teachers, new SelectList(Model.Teachers, "U_Id", "U_Last_Name"), new { @id = "classList" })
                </td>
            </tr>

            <tr>
                <th>Class</th>
                <td>
                    @Html.DropDownListFor(m => m.Classes, new SelectList(Model.Classes, "Class_Id", "Class_Name"), new { @id = "classList" })
                </td>



            <tr>
                <th>Room:</th>
                <td>
                    @Html.DropDownListFor(m => m.Rooms, new SelectList(Model.Rooms, "Room_Id", "Room_Name"), new { @id = "classList" })

                </td>
            </tr>

            <tr>

                <th>Time:</th>
                <td class="select">
                    <input type="text" id="picker" name="picker" class="form-control" />

                </td>

                <script>

                    $('#picker').datetimepicker({
                        timepicker: true,
                        datepicker: false,
                        format: 'H:i',
                        value: '10:00',
                        hours12: false, 
                        step: 30
                       // allowTimes: ['']

                    })
                </script>
            </tr>
            <tr>
                <th>Date:</th>
                <td><input type="date" class="inputs" name="classDate" id="classDate" required /></td>
            </tr>


            <tr>
                <th>Schedule Status:</th>
                <td style="text-align:center">

                    <select id="status" name="status">
                        <option value="ACTIVE" selected>Active</option>
                        <option value="CANCELLED">Cancelled</option>

                    </select>
                </td>

            </tr>
            <tr>
                <td></td>
                <td style="text-align:center"><button style="width:150px" type="submit" class="btn btn-default">Create</button></td>
            </tr>
            <tr><td></td></tr>
            <tr>
                <td><button onclick="goBack()">Go Back</button></td>
            </tr>
        </table>
    }
</div>











<!--
                       Html.DropDownListFor(m => m.Passes, new SelectList(Model.Passes, "pass_id", "pass_name"), new { a id = "passList" })

        <div class="form-group">
          Html.LabelFor(model => model.Teacher_Id, htmlAttributes: new { class = "control-label col-md-2" })
            <div class="col-md-10">
                Html.EditorFor(model => model.Teacher_Id, new { htmlAttributes = new { class = "form-control" } })
                Html.ValidationMessageFor(model => model.Teacher_Id, "", new { class = "text-danger" })
            </div>
        </div>

-->
